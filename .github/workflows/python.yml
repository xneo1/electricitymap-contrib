name: Python

on:
  workflow_call:

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: 'poetry'
      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-venv
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry install -E parsers
      - name: Linting
        run: |
          poetry run lint

  test:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
          cache: 'poetry'
      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-venv
      - name: Install libxml2-dev and tesseract-ocr
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev tesseract-ocr tesseract-ocr-eng
      - name: Install Poetry dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry install -E parsers
      - name: Run tests
        run: |
          poetry run test
